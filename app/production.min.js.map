{"version":3,"sources":["app.js","candidates.js","cfaImage.js","candidate.js","home.js"],"names":["config","$httpProvider","interceptors","push","$rootScope","loading","promise","hide","r","then","candidatesService","$http","$q","getCandidates","request","url","method","cache","candidatesSuccess","errorHandler","getCandidateDetails","name","getEntityID","response","data","all","getContributers","id","getIndustries","getTypeBreakdown","results","contributors","industries","types","routeName","newName","split","length","splice","join","params","apikey","search","type","callback","successHandler","forEach","c","cash_on_hand","parseInt","total_receipts","total_contributions","total_disbursements","outstanding_loans","expenditures_opposing","expenditures_supporting","cfaImage","restrict","link","scope","element","attrs","src","img","Image","onload","addClass","append","candidateConfig","$routeProvider","when","templateUrl","controller","resolve","candidate","$route","current","CandidateCtrl","$scope","typeBreakdown","options","responsive","lastName","replace","headshotsrc","industryNamesArray","industryDataArray","amount","labels","candidates","otherwise","redirectTo","HomeCtrl","namesArray","dataArray","filteredCandidates","$watchGroup","newValue","series","colours","fillColor","strokeColor","highlightFill","highlightStroke","scaleLabel","label","value","toString","tooltipTemplate","angular","module","$inject","factory","directive"],"mappings":"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","file":"production.min.js","sourcesContent":["angular.module('campaignFinanceApp', ['cfa.components.home','cfa.components.candidate', 'ngResource', 'ngAnimate'])\n\n    .config(config);\n\nconfig.$inject = ['$httpProvider'];\nfunction config($httpProvider) {\n    $httpProvider.interceptors.push(['$rootScope', function($rootScope) {\n      $rootScope.loading = false;\n      return function (promise) {\n        $rootScope.loading = true;\n        // make sure the loading screen is visible\n        var hide = function (r) {\n            $rootScope.loading = false;\n             return r;\n        };\n        return promise.then(hide, hide);\n      };\n    }]);\n}","angular.module('cfa.services.candidates', [])\n    .factory('candidatesService', candidatesService);\n\ncandidatesService.$inject = ['$http','$q'];\nfunction candidatesService($http, $q) {\n    var candidatesService = {\n        getCandidates: getCandidates,\n        getCandidateDetails: getCandidateDetails\n    };\n\n    function getCandidates() {\n        var request = $http({\n            url: 'http://stuartdotson.com/sunlightapi/candidates_json.php',\n            method: 'GET',\n            cache: true\n        });\n        return request.then(candidatesSuccess, errorHandler);\n    }\n\n    function getCandidateDetails(name) {\n\n        var promise = getEntityID(name).then(function(response) {\n            if (response.data[0]) {\n                return $q.all([\n                    getContributers(response.data[0].id),\n                    getIndustries(response.data[0].id),\n                    getTypeBreakdown(response.data[0].id)\n                ]).then(function(results) {\n                    return {\n                        contributors: results[0],\n                        industries: results[1],\n                        types: results[2]\n                    };\n                });\n            } else {\n                return false;\n            };\n        });\n\n        return promise;\n\n    }\n\n    function getEntityID(name) {\n\n       /* alter name to suit imperfect api lookup */\n        var routeName = name,\n            newName = routeName.split(' ');\n\n        if (newName.length > 2) {\n            newName.splice(2, newName.length - 1)\n        };\n\n        newName = newName.join(\" \");\n\n        switch (newName) {\n            case \"CRUZ, RAFAEL\":\n                newName = \"Ted Cruz\";\n                break;\n            case \"PERRY, JAMES\":\n                newName = \"Rick Perry\";\n                break;\n            case \"SANTORUM, RICHARD\":\n                newName = \"RICK SANTORUM\";\n                break;\n        };\n\n\n        var request = $http({\n            url: 'http://transparencydata.org/api/1.0/entities.json',\n            method: 'JSONP',\n            cache: true,\n            params: {\n                apikey: \"5fb0ee006d904354961ae1e83e80011b\",\n                search: newName,\n                type: \"politician\",\n                callback: 'JSON_CALLBACK',\n            }\n        });\n\n        return request;\n    }\n\n    function getContributers(id) {\n\n        var request = $http({\n            url: 'http://transparencydata.org/api/1.0/aggregates/pol/' + id + '/contributors.json',\n            method: 'JSONP',\n            cache: true,\n            params: {\n                apikey: \"5fb0ee006d904354961ae1e83e80011b\",\n                callback: 'JSON_CALLBACK',\n            }\n        });\n\n        return request.then(successHandler, errorHandler);\n    }\n\n    function getIndustries(id) {\n\n        var request = $http({\n            url: 'http://transparencydata.org/api/1.0/aggregates/pol/' + id + '/contributors/industries.json',\n            method: 'JSONP',\n            cache: true,\n            params: {\n                apikey: \"5fb0ee006d904354961ae1e83e80011b\",\n                callback: 'JSON_CALLBACK',\n            }\n        });\n\n        return request.then(successHandler, errorHandler);\n    }\n\n    function getTypeBreakdown(id) {\n\n        var request = $http({\n            url: 'http://transparencydata.org/api/1.0/aggregates/pol/' + id + '/contributors/type_breakdown.json',\n            method: 'JSONP',\n            cache: true,\n            params: {\n                apikey: \"5fb0ee006d904354961ae1e83e80011b\",\n                callback: 'JSON_CALLBACK',\n            }\n        });\n\n        return request.then(successHandler, errorHandler);\n    }\n\n\n\n    function candidatesSuccess(response) {\n        response.data.forEach(function(c) {\n           c.cash_on_hand = parseInt(c.cash_on_hand, 10);\n           c.total_receipts = parseInt(c.total_receipts, 10);\n           c.total_contributions = parseInt(c.total_contributions, 10);\n           c.total_disbursements = parseInt(c.total_disbursements, 10);\n           c.outstanding_loans = parseInt(c.outstanding_loans, 10);\n           c.expenditures_opposing = parseInt(c.expenditures_opposing, 10);\n           c.expenditures_supporting = parseInt(c.expenditures_supporting, 10);\n        });\n\n        return response.data;\n    }\n\n    function successHandler(response) {\n        return response.data;\n    }\n\n    function errorHandler(response) {\n        return response;\n    }\n\n    function entityErrorHandler(response) {\n        return response;\n    }\n\n\n    return candidatesService;\n}","angular.module('cfa.directives.cfaImage', [])\n    .directive('cfaImage', cfaImage);\n\ncfaImage.$inject = [];\nfunction cfaImage() {\n    return {\n        restrict: \"E\",\n        link: function(scope, element, attrs) {\n            if (attrs.src) {\n                var img = new Image();\n                img.onload = function() {\n                    element.addClass('active');\n                };\n                element.append(img);            \n                img.src = attrs.src;\n            };  \n        }\n    }\n}","angular.module('cfa.components.candidate', ['ngRoute','chart.js','cfa.directives.cfaImage'])\n    .config(candidateConfig)\n    .controller('CandidateCtrl', CandidateCtrl);\n\ncandidateConfig.$inject = ['$routeProvider'];\nfunction candidateConfig($routeProvider) {\n    $routeProvider.when('/candidate/:name', {\n        templateUrl: 'components/candidate/candidate.html',\n        controller: 'CandidateCtrl',\n        resolve: {\n            candidate: ['candidatesService', '$route', function(candidatesService, $route) {\n                return candidatesService.getCandidateDetails($route.current.params.name);\n            }],\n            name: ['$route', function($route) {\n                return $route.current.params.name;\n            }],\n        }\n    });\n}\n\nCandidateCtrl.$inject = ['$scope', 'candidate', 'name'];\nfunction CandidateCtrl($scope, candidate, name) {\n    $scope.name = name;\n    $scope.candidate = candidate;\n    $scope.contributors = candidate.contributors;\n    $scope.industries = candidate.industries;\n    $scope.typeBreakdown = candidate.types;\n\n    $scope.options = {\n        responsive: true\n    };\n\n    var lastName = name.split(',')[0].replace(\"'\",\"\");\n\n    $scope.headshotsrc = \"./assets/images/\" + lastName + \".jpg\";\n\n\n    var industryNamesArray = [];\n    var industryDataArray = [];\n\n    if ($scope.industries) {\n        $scope.industries.forEach(function(c) {\n            industryNamesArray.push(c.name);\n            industryDataArray.push(c.amount);\n        });\n    };\n\n    $scope.labels = industryNamesArray;\n    $scope.data = industryDataArray;\n\n}","angular.module('cfa.components.home', ['ngRoute','cfa.services.candidates', 'chart.js'])\n    .config(config)\n    .controller('HomeCtrl', HomeCtrl);\n\nconfig.$inject = ['$routeProvider'];\nfunction config($routeProvider) {\n    $routeProvider\n      .when('/', {\n        templateUrl: 'components/home/home.html',\n        controller: 'HomeCtrl',\n        resolve: {\n            candidates: ['candidatesService', function(candidatesService) {\n                return candidatesService.getCandidates();\n            }]\n        }\n    }).otherwise({\n      redirectTo: '/'\n    });\n}\n\nHomeCtrl.$inject = ['$scope','candidates'];\nfunction HomeCtrl($scope, candidates) {\n  var namesArray = [];\n  var dataArray = [];\n\n    candidates.forEach(function(c){\n       namesArray.push(c.name);\n    });\n\n    $scope.filteredCandidates = candidates;\n\n    $scope.$watchGroup(['criteria.sortBy','criteria.sortDirection','criteria.include'], function(newValue) {\n      dataArray = [];\n      namesArray = [];\n      $scope.filteredCandidates.forEach(function(c) {\n        dataArray.push(parseInt(c[newValue[0]],10));\n        namesArray.push(c.name);\n      });\n\n      $scope.data = [\n        dataArray\n      ];\n\n      $scope.labels = namesArray;\n      \n    });\n\n    $scope.candidates = candidates;\n\n\n    $scope.labels = namesArray;\n    $scope.series = ['Series A'];\n\n    $scope.colours = [{\n        fillColor: '#de7a60',\n        strokeColor: '#de7a60',\n        highlightFill: '#449e6b',\n        highlightStroke: '#449e6b'\n    }];\n\n    $scope.options = {\n      responsive: true,\n      scaleLabel: function(label) {\n        return  '$' + label.value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n      },\n      tooltipTemplate: function(value) {\n        if (value.label)  {\n            return value.label + \": $\" + value.value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n        } else {\n            return value.value;\n        };\n      }\n    }\n\n    $scope.data = [\n      dataArray\n    ];\n\n}"],"sourceRoot":"/source/"}